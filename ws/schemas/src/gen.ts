/*
 Generated by typeshare 1.13.2
*/

export interface IPaginated {
	current: number;
	size: number;
	total: number;
}

export type ContentNode = 
	| { type: "media", body: IContentMedia }
	| { type: "list", body: IContentList }
	| { type: "preview", body: IContentPreview };

export interface IContentList {
	name: string;
	page: IPaginated;
	items: ContentNode[];
}

export interface IContentMedia {
	name: string;
	path: string;
	duration?: number;
	thumbnailPath?: string;
	mediaType: number;
	createdAt: string;
	isLocal: boolean;
	size?: string;
}

export enum ContentNodeType {
	Media = "media",
	List = "list",
	Preview = "preview",
}

export interface IContentPreview {
	type: ContentNodeType;
	pict?: string;
}

export interface IContentProviderViews {
	main: string;
	search?: string;
}

export interface IContentProvider {
	key: string;
	name: string;
	views: IContentProviderViews;
}

export enum ContentProviderViewKey {
	Main = "main",
	Search = "search",
}

export enum MediaType {
	Video = "Video",
	Audio = "Audio",
}

